// File: DependencyInjectionExample.java

// Repository Interface
interface CustomerRepository {
    String findCustomerById(int id);
}

// Concrete Repository Implementation
class CustomerRepositoryImpl implements CustomerRepository {
    @Override
    public String findCustomerById(int id) {
        // Simulating database lookup
        if (id == 1) {
            return "John Doe";
        } else if (id == 2) {
            return "Jane Smith";
        } else {
            return "Customer not found";
        }
    }
}

// Service Class
class CustomerService {
    private CustomerRepository repository;

    // Constructor Injection
    public CustomerService(CustomerRepository repository) {
        this.repository = repository;
    }

    public String getCustomerName(int id) {
        return repository.findCustomerById(id);
    }
}

// Main Class to Test Dependency Injection
public class DependencyInjectionExample {
    public static void main(String[] args) {
        // Create a repository instance
        CustomerRepository repository = new CustomerRepositoryImpl();

        // Inject repository into service
        CustomerService service = new CustomerService(repository);

        // Use the service to find customers
        System.out.println("Customer with ID 1: " + service.getCustomerName(1));
        System.out.println("Customer with ID 2: " + service.getCustomerName(2));
        System.out.println("Customer with ID 3: " + service.getCustomerName(3));
    }
}