public class FactoryMethodPatternExample {

    public static void main(String[] args) {
        // Create a factory for each document type
        DocumentFactory wordFactory = new WordDocumentFactory();
        DocumentFactory pdfFactory = new PdfDocumentFactory();
        DocumentFactory excelFactory = new ExcelDocumentFactory();

        // Create documents using the factories
        Document wordDoc = wordFactory.createDocument();
        Document pdfDoc = pdfFactory.createDocument();
        Document excelDoc = excelFactory.createDocument();

        // Demonstrate the usage of each document type
        wordDoc.open();
        wordDoc.save();
        wordDoc.close();

        pdfDoc.open();
        pdfDoc.save();
        pdfDoc.close();

        excelDoc.open();
        excelDoc.save();
        excelDoc.close();
    }

    // Document interface
    public interface Document {
        void open();
        void save();
        void close();
    }

    // Concrete Document classes
    public static class WordDocument implements Document {
        @Override
        public void open() {
            System.out.println("Opening Word document...");
        }

        @Override
        public void save() {
            System.out.println("Saving Word document...");
        }

        @Override
        public void close() {
            System.out.println("Closing Word document...");
        }
    }

    public static class PdfDocument implements Document {
        @Override
        public void open() {
            System.out.println("Opening PDF document...");
        }

        @Override
        public void save() {
            System.out.println("Saving PDF document...");
        }

        @Override
        public void close() {
            System.out.println("Closing PDF document...");
        }
    }

    public static class ExcelDocument implements Document {
        @Override
        public void open() {
            System.out.println("Opening Excel document...");
        }

        @Override
        public void save() {
            System.out.println("Saving Excel document...");
        }

        @Override
        public void close() {
            System.out.println("Closing Excel document...");
        }
    }

    // Abstract Factory class
    public static abstract class DocumentFactory {
        public abstract Document createDocument();
    }

    // Concrete Factory classes
    public static class WordDocumentFactory extends DocumentFactory {
        @Override
        public Document createDocument() {
            return new WordDocument();
        }
    }

    public static class PdfDocumentFactory extends DocumentFactory {
        @Override
        public Document createDocument() {
            return new PdfDocument();
        }
    }

    public static class ExcelDocumentFactory extends DocumentFactory {
        @Override
        public Document createDocument() {
            return new ExcelDocument();
        }
    }
}